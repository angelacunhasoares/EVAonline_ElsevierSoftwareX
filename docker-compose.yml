version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn -b 0.0.0.0:8050 --workers 2 pages.main:app.server
    ports:
      - "8050:8050"
    depends_on:
      redis:
        condition: service_healthy
      api:
        condition: service_started
    environment:
      - REDIS_URL=redis://redis:6379/0
      - PYTHONUNBUFFERED=1
      - LANG=pt_BR.UTF-8
      - SERVICE=web
    volumes:
      - ./pages:/app/pages
      - ./assets:/app/assets
      - ./logs:/app/logs
      - ./utils:/app/utils
      - ./components:/app/components
      - ./src:/app/src

  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn api.data_service:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis:6379/0
      - PYTHONUNBUFFERED=1
      - SERVICE=api
    volumes:
      - ./api:/app/api
      - ./logs:/app/logs
      - ./src:/app/src

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A api.celery_config worker --loglevel=info --concurrency=4
    depends_on:
      redis:
        condition: service_healthy
      api:
        condition: service_started
    environment:
      - REDIS_URL=redis://redis:6379/0
      - PYTHONUNBUFFERED=1
      - SERVICE=celery
    volumes:
      - ./api:/app/api
      - ./logs:/app/logs
      - ./src:/app/src

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml

volumes:
  redis_data: